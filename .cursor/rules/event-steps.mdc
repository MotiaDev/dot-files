---
description: What are Motia Event Steps and an example of usage
globs: 
alwaysApply: false
---
# Event Steps Guide

Event Steps handle asynchronous message processing and event emission.

## Configuration
```typescript
export const config: EventConfig = {
  type: 'event',
  name: 'my-event-step',
  subscribes: ['previous-step']
  emits: ['step-finished'],
  input: z.object({
    (...)
  }),
}
```

## Event Patterns

### Sequential Processing
```typescript
export const handler = async (input, { emit }) => {
  // Process input
  const result = await processData(input);
  
  // Emit to next step
  await emit({
    topic: 'processing.complete',
    data: result
  });
};
```

### Parallel Processing
```typescript
export const handler = async (input, { emit }) => {
  // Emit multiple events
  await Promise.all([
    emit({ topic: 'branch1', data: input }),
    emit({ topic: 'branch2', data: input })
  ]);
};
```